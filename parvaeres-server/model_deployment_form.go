/*
 * Parvaeres API
 *
 * Parvaeres magic deployment API
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package parvaeres

import (
	"encoding/json"
)

// DeploymentForm struct for DeploymentForm
type DeploymentForm struct {
	Repository *string `json:"repository,omitempty"`
	Email      *string `json:"email,omitempty"`
}

// NewDeploymentForm instantiates a new DeploymentForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentForm() *DeploymentForm {
	this := DeploymentForm{}
	return &this
}

// NewDeploymentFormWithDefaults instantiates a new DeploymentForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentFormWithDefaults() *DeploymentForm {
	this := DeploymentForm{}
	return &this
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *DeploymentForm) GetRepository() string {
	if o == nil || o.Repository == nil {
		var ret string
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentForm) GetRepositoryOk() (*string, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *DeploymentForm) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given string and assigns it to the Repository field.
func (o *DeploymentForm) SetRepository(v string) {
	o.Repository = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *DeploymentForm) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentForm) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *DeploymentForm) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *DeploymentForm) SetEmail(v string) {
	o.Email = &v
}

func (o DeploymentForm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentForm struct {
	value *DeploymentForm
	isSet bool
}

func (v NullableDeploymentForm) Get() *DeploymentForm {
	return v.value
}

func (v *NullableDeploymentForm) Set(val *DeploymentForm) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentForm) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentForm(val *DeploymentForm) *NullableDeploymentForm {
	return &NullableDeploymentForm{value: val, isSet: true}
}

func (v NullableDeploymentForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
