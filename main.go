/*
 * Parvaeres API
 *
 * Parvaeres magic deployment API
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	"github.com/pkg/errors"
	parvaeres "github.com/riccardomc/parvaeres/pkg/api"
	"github.com/riccardomc/parvaeres/pkg/gitops"
)

// FIXME: these should be configurable
const kubeconfig string = ""
const argoCDNamespace string = "argocd"

func main() {
	log.Printf("Server started")

	kubernetesConfig, err := gitops.GetKubernetesConfig(kubeconfig)
	if err != nil {
		log.Fatalf(errors.Wrap(err, "Couldn't get kubernetes config. Bailing out.").Error())
	}
	kubernetesClient, err := gitops.GetKubernetesClientSet(kubernetesConfig)
	if err != nil {
		log.Fatalf(errors.Wrap(err, "Couldn't get kubernetes client. Bailing out.").Error())
	}
	argoCDClient, err := gitops.GetArgoCDClientSet(kubernetesConfig)
	if err != nil {
		log.Fatalf(errors.Wrap(err, "Couldn't get ArgoCD client. Bailing out.").Error())
	}

	DefaultApiService := &parvaeres.DefaultApiService{
		Gitops: gitops.NewGitOpsClient().
			WithKubernetesClient(kubernetesClient).
			WithArgoCDClient(argoCDClient).
			WithArgoCDNamespace(argoCDNamespace),
	}
	DefaultApiController := parvaeres.NewDefaultApiController(DefaultApiService)

	router := parvaeres.NewRouter(DefaultApiController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
