---
openapi: 3.0.0

info:
  title: Parvaeres API
  description: Parvaeres magic deployment API
  version: 0.0.1

servers:
  - url: http://api.poc.parvaeres.io/v1
    description: Here we go, let's make this happen!

paths:

  /:
    summary: Parvaeres Server
    description: This is Parvaeres Server
    get:
      summary: Alive
      responses:
        '200':
          description: OK

  /deployment:
    summary: Deployments
    description: This resource represents the deployments in the system

    get:
      summary: Get all deployments
      requestBody:
        description: Additional parameters for request
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDeploymentRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeploymentResponse'

    post:
      summary: Create a new deployment
      requestBody:
        description: Deployment parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeploymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateDeploymentRequest'
      responses:
        '202':  # Accepted
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeploymentResponse'

  /deployment/{deploymentId}:
    summary: A deployment
    description: This resource represents an individual deployment

    get:
      summary: Get the deployment with id deploymentId
      parameters:
        - in: path
          name: deploymentId
          schema:
            type: string
          required: true
          description: the id of the deployment to retrieve
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStatus'

  /deployment/{deploymentId}/logs:
    summary: Get logs
    description: Retrieve the logs of the deployment

    get:
      summary: Get the logs of the deployment with deploymentId
      parameters:
        - in: path
          name: deploymentId
          schema:
            type: string
          required: true
          description: the id of the deployment for which retrieve the logs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeploymentLogsResponse'

components:
  schemas:
    CreateDeploymentRequest:
      type: object
      properties:
        Email:
          type: string
        Repository:
          type: string
        Path:
          type: string

    CreateDeploymentResponse:
      type: object
      properties:
        Message:
          type: string
        Error:
          type: boolean
        Items:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/DeploymentStatus'

    GetDeploymentRequest:
      type: object
      properties:
        UUID:
          type: string
        Filter:
          type: string

    GetDeploymentResponse:
      type: object
      properties:
        Message:
          type: string
        Error:
          type: boolean
        Items:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/DeploymentStatus'

    GetDeploymentLogsResponse:
      type: object
      properties:
        Message:
          type: string
        Error:
          type: boolean
        Items:
          type: array
          items:
            type: object
            allOf:
              - $ref: '#/components/schemas/Logs'

    DeploymentStatus:
      type: object
      properties:
        UUID:
          type: string
        Status:
          $ref: "#/components/schemas/DeploymentStatusType"
        LiveURLs:
          type: array
          items:
            type: string
        Errors:
          type: array
          items:
            type: string
        LogsURL:
          type: string

    DeploymentStatusType:
      type: string
      enum:
        - PENDING
        - SYNCING
        - DEPLOYED
        - ERROR
        - UNKNOWN

    Logs:
      type: object
      properties:
        Pod:
          type: string
        Container:
          type: string
        Logs:
          type: string
